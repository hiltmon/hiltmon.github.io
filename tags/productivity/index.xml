<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Productivity on Hiltmon</title><link>https://hiltmon.com/tags/productivity/</link><description>Recent content in Productivity on Hiltmon</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 10 Apr 2016 11:20:22 -0400</lastBuildDate><atom:link href="https://hiltmon.com/tags/productivity/index.xml" rel="self" type="application/rss+xml"/><item><title>Spotlight Only - Nine Months Later</title><link>https://hiltmon.com/blog/2016/04/10/spotlight-only-nine-months-later/</link><pubDate>Sun, 10 Apr 2016 11:20:22 -0400</pubDate><guid>https://hiltmon.com/blog/2016/04/10/spotlight-only-nine-months-later/</guid><description>I think one should review one&amp;rsquo;s productivity tool load-out every once in a while. Operating system updates, other productivity tool updates and your own work practices change over time. Your tool load-out should too. Changing the muscle-memory, it turns out, is surprisingly simple, quick and easy. And your productivity usually increases.
I am a huge fan of keyboard launcher/productivity applications like LaunchBar, Alfred, and back-in-the-day QuickSilver. They were amongst the first applications installed on any new system, and I believed I could not work productively without them.</description></item><item><title>The Productive Mac Mindset</title><link>https://hiltmon.com/blog/2015/08/15/the-productive-mac-mindset/</link><pubDate>Sat, 15 Aug 2015 12:42:13 -0400</pubDate><guid>https://hiltmon.com/blog/2015/08/15/the-productive-mac-mindset/</guid><description>I have been using a set of productivity enhancement tools on my Mac for so long now that the standard, out-of-box OS X user experience seems challenging, crawling, cumbersome and somewhat convoluted.
So much so that it has become frustrating for me to use another person&amp;rsquo;s Mac.
In this post, I intend to outline how the limited set of productivity tools I use give me &amp;ldquo;ludicrous speed&amp;rdquo;. Note that I have invested the time to learn these tools and to create the productivity shortcuts they provide.</description></item><item><title>Omnifocus My Way</title><link>https://hiltmon.com/blog/2014/05/26/omnifocus-my-way/</link><pubDate>Mon, 26 May 2014 15:39:03 -0400</pubDate><guid>https://hiltmon.com/blog/2014/05/26/omnifocus-my-way/</guid><description>I&amp;rsquo;ve been using OmniFocus as my primary tool for task management for years, yet I never read the GTD book. How I chose OmniFocus is a topic for another day, how I use it my way is the topic for today. Maybe some of the alternative ways I use it can improve the way you do too.
My World I&amp;rsquo;m a software designer, developer, project manager and part-time writer. I work at a Hedge Fund by day, run my consulting firm at night, write this blog and have a personal life.</description></item><item><title>Laravel 4 Blade TextMate Bundle</title><link>https://hiltmon.com/blog/2013/07/28/laravel-4-textmate-bundle/</link><pubDate>Sun, 28 Jul 2013 11:37:00 -0400</pubDate><guid>https://hiltmon.com/blog/2013/07/28/laravel-4-textmate-bundle/</guid><description>In the comments of My TextMate 2 Setup, reader Bob Rockerfeller wondered if the Sublime Text Laravel 4 Blade bundle could be ported to TextMate 2. So I did.
It was easy because Sublime Text uses TextMate&amp;rsquo;s .tmLanguage file format for syntax highlighting. I just created a new bundle using the Bundle Editor, created a new Syntax file and pasted in Eric Percifield&amp;rsquo;s (@medalink7) code. Then tested it with the example in his repo.</description></item><item><title>Good Tools Change</title><link>https://hiltmon.com/blog/2013/07/07/good-tools-change/</link><pubDate>Sun, 07 Jul 2013 11:02:00 -0400</pubDate><guid>https://hiltmon.com/blog/2013/07/07/good-tools-change/</guid><description>In Good Tools, James Bennett writes a compelling article on how his investment in learning his most used tool, emacs, has paid huge dividends in his productivity for years and years. I recommend you read it, his arguments are cogent and his points well founded and well made. He writes:
Good tools, for programmers, are investments: you give them your time and your brain up-front, and then they pay dividends for years on end.</description></item><item><title>Fix the Mac Function Keys with Palua</title><link>https://hiltmon.com/blog/2013/05/01/fix-the-mac-function-keys-with-palua/</link><pubDate>Wed, 01 May 2013 13:04:00 -0400</pubDate><guid>https://hiltmon.com/blog/2013/05/01/fix-the-mac-function-keys-with-palua/</guid><description>By default, the function keys on Apple keyboards are mapped to the Apple functions on them, like brightness, volume and Mission Control. To access them as F1 - F12 requires you to hit the fn key as well. You could always reverse this in Preferences / Keyboard by checking Use all F1, F2, etc. keys as standard function keys.
But this change is system-wide. What if you want the default Apple behavior most of the time, but Function key behavior in certain applications, for example, in virtual machines?</description></item><item><title>My TextMate 2 Setup</title><link>https://hiltmon.com/blog/2013/04/15/my-textmate-2-setup/</link><pubDate>Mon, 15 Apr 2013 14:42:00 -0400</pubDate><guid>https://hiltmon.com/blog/2013/04/15/my-textmate-2-setup/</guid><description>&lt;p>I switched back to &lt;a href="https://github.com/textmate/textmate">TextMate 2&lt;/a> from &lt;a href="http://www.sublimetext.com/2">Sublime Text 2&lt;/a> full time a while back and I am really happy with the way I have it looking and working. My &amp;ldquo;&lt;a href="https://hiltmon.com/blog/2012/08/14/my-sublime-text-2-setup/">My Sublime Text 2 Setup&lt;/a>&amp;rdquo; post is quite popular, so I though I&amp;rsquo;d create the same for TextMate 2.&lt;/p>
&lt;figure>&lt;img src="images/textmate-themes.jpg" width="600" height="240"/>
&lt;/figure></description></item><item><title>Mixing Legacy and Modern Web Development on OS X Mountain Lion</title><link>https://hiltmon.com/blog/2013/03/20/mixing-legacy-and-modern-web-development-on-os-x-mountain-lion/</link><pubDate>Wed, 20 Mar 2013 16:42:00 -0400</pubDate><guid>https://hiltmon.com/blog/2013/03/20/mixing-legacy-and-modern-web-development-on-os-x-mountain-lion/</guid><description>&lt;p>Over the past few years I have been developing &lt;em>modern&lt;/em> web applications like &lt;a href="http://www.kifuapp.com">Kifu&lt;/a> on my laptop using &lt;a href="https://rubyonrails.org/">Ruby on Rails&lt;/a>, &lt;a href="http://www.sinatrarb.com">Sinatra&lt;/a>, &lt;a href="http://octopress.org">Octopress&lt;/a>, and &lt;a href="http://nodejs.org">Node.js&lt;/a> powered by &lt;a href="http://pow.cx">Pow&lt;/a>. But over the next few weeks I&amp;rsquo;ll be helping a friend upgrade a bunch of older legacy static (plain HTML), &lt;a href="http://php.net">PHP&lt;/a> and &lt;a href="http://wordpress.org">Wordpress&lt;/a> sites.&lt;/p>
&lt;p>I &lt;em>do&lt;/em> want to keep using the same smooth workflow processes as I have now. But I do &lt;em>not&lt;/em> want to clutter up my pristine OS X installation to do it. So this is how I have my &lt;em>modern&lt;/em> web development environment set up, and how I have added &lt;em>almost seamless&lt;/em> legacy development capability to it.&lt;/p></description></item><item><title>Gist TextMate Bundle and Command Line</title><link>https://hiltmon.com/blog/2013/02/25/gist-textmate-bundle-and-command/</link><pubDate>Mon, 25 Feb 2013 15:44:00 -0400</pubDate><guid>https://hiltmon.com/blog/2013/02/25/gist-textmate-bundle-and-command/</guid><description>I was having a conversation on Twitter with Shawn Hansen (@geekles) this weekend and he mentioned that Sublime Text 2 has a great plugin for Github Gists, and TextMate 2 was missing this awesomeness.
Not anymore (the Oscars were on).
Announcing the first release of my TextMate 2 bundle and a separate command line tool for retrieving, creating and updating GitHub Gists.
The main difference between this and other implementations is that this one caches gist mappings (gist id to file names in ~/.</description></item><item><title>Multiple Themes in TextMate 2</title><link>https://hiltmon.com/blog/2013/02/22/multiple-themes-in-textmate-2/</link><pubDate>Fri, 22 Feb 2013 18:02:00 -0400</pubDate><guid>https://hiltmon.com/blog/2013/02/22/multiple-themes-in-textmate-2/</guid><description>One thing I like to do is to have different themes for different file types in my text editor. That way, at a glance, I can guess what kind of file a text-filled window contains, especially when zoomed out using Mission Control. I’ve been using Custom Language Preferences in BBEdit preferences to set up the color scheme for each file type there, and I have set up Multiple Themes in Sublime Text 2 previously.</description></item><item><title>Glui - a better Skitch</title><link>https://hiltmon.com/blog/2013/02/20/glui-a-better-skitch/</link><pubDate>Wed, 20 Feb 2013 19:09:00 -0400</pubDate><guid>https://hiltmon.com/blog/2013/02/20/glui-a-better-skitch/</guid><description>Ever since Evernote purchased and then ruined Skitch (See my Bye bye Skitch, Hello LittleSnapper post), I’ve been looking for a replacement product. A lightweight snap, annotate and save to PNG or share the image app. And I think Glui may be it.
I just wanted an app that just does the following like the original Skitch betas:
Snap Quick Annotate Save as image, or Share the image Go away Glui, by Sebastian Razola (@razola), does exactly that.</description></item><item><title>Browser Windows on all Desktops</title><link>https://hiltmon.com/blog/2013/01/19/browser-windows-on-all-desktops/</link><pubDate>Sat, 19 Jan 2013 14:05:00 -0400</pubDate><guid>https://hiltmon.com/blog/2013/01/19/browser-windows-on-all-desktops/</guid><description>In Being Productive With Virtual Desktops, I talked about how I pin certain applications to certain Mission Control virtual desktops to create context specific environments.
Reader “zharmany” asked what I did with the web browser, since it is needed on many of these desktops for different reasons.
My needs are to have separate browser windows on Desktop 1 / Work for previews, on Desktop 3 / Mail for mail links and on Desktop 4 / Social for looking at tweeted links, so I do not pin Safari.</description></item><item><title>Being Productive with Virtual Desktops</title><link>https://hiltmon.com/blog/2013/01/17/being-productive-with-virtual-desktops/</link><pubDate>Thu, 17 Jan 2013 10:16:00 -0400</pubDate><guid>https://hiltmon.com/blog/2013/01/17/being-productive-with-virtual-desktops/</guid><description>There are a bunch of applications I always want running on my computer, such as Mail.app, OmniFocus, Billings Pro and Tweetbot, but I also do not want to be distracted by them. One option is to hide them using ⌘H on the Mac, the other way is to use virtual desktops.
My goal is to create context-aware desktops where I can stay focussed on the task at hand without distractions, and to be able to switch and restore contexts instantly and predictably, that is most productive.</description></item><item><title>Be Organized and Productive</title><link>https://hiltmon.com/blog/2012/12/26/be-organized-and-productive/</link><pubDate>Wed, 26 Dec 2012 16:59:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/12/26/be-organized-and-productive/</guid><description>The theme of 2012 was all about getting organized and productive using software. I may have spent 2012 developing Kifu and some internal applications for clients, but I spent a lot of time this year getting better organized and more productive on my Mac. It’s ridiculous how much this has paid off.
So, instead of a cool-products-of-2012-year-in-review post, here are many of the things I do and tools I use to be organized and productive, with thanks to those to shared the ideas with us.</description></item><item><title>CD to Current Finder Path</title><link>https://hiltmon.com/blog/2012/12/21/cd-to-current-finder-path/</link><pubDate>Fri, 21 Dec 2012 08:29:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/12/21/cd-to-current-finder-path/</guid><description>To open a new terminal in the current Finder path in OS X, you can use the built-in service (See below on how to enable). But if you are already in a Terminal session, you need to leave the keyboard, mouse to Finder and drag and drop the path back. Here’s a trick that gets you to the frontmost Finder path without leaving the Terminal or keyboard.
Add the following to your .</description></item><item><title>Inbox Kinda Zero</title><link>https://hiltmon.com/blog/2012/12/01/inbox-kinda-zero/</link><pubDate>Sat, 01 Dec 2012 14:02:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/12/01/inbox-kinda-zero/</guid><description>The idea behind Inbox Zero is to manage email overload. Basically, you aggressively process your email inbox by
Deleting everything you don’t need, want, care about, don’t care about, couldn’t be bothered with or is too old to act on. Respond and file what you can process quickly. Queue, by filing, emails that you need to get back to. Schedule tasks and time to process the queue folder. With Inbox Zero, if there is an email in the inbox, it needs to be processed away.</description></item><item><title>Back to Byword from iA Writer</title><link>https://hiltmon.com/blog/2012/11/29/back-to-byword-from-ia-writer/</link><pubDate>Thu, 29 Nov 2012 17:26:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/11/29/back-to-byword-from-ia-writer/</guid><description>For as long as it has been available, I have been using Byword for writing in Markdown. All blog posts, all knowledge base notes, all written using Byword. But I really liked the look of iA Writer, so I made Byword’s font look more like iA Writer’s (see Text Editing Fonts and Colors). Perfect.
I even started a “why I prefer one over the other” post, but it only contained one item:</description></item><item><title>Multi-Platform Editing is Sublime</title><link>https://hiltmon.com/blog/2012/11/26/multi-platform-editing-is-sublime/</link><pubDate>Mon, 26 Nov 2012 20:37:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/11/26/multi-platform-editing-is-sublime/</guid><description>One of the best things about the Sublime Text 2 license is that it&amp;rsquo;s a per-user license. This allows you to run it on all computers where you are the primary user. And since Sublime Text 2 is multi-platform, that means on all the operating systems you use as well.
For example, in my case, I can and do run Sublime Text 2 on
My laptop Macintosh which is my regular workhorse.</description></item><item><title>Multiple Themes in Sublime Text 2</title><link>https://hiltmon.com/blog/2012/11/07/multiple-themes-in-sublime-text-2/</link><pubDate>Wed, 07 Nov 2012 15:09:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/11/07/multiple-themes-in-sublime-text-2/</guid><description>One thing I like to do is to have different themes for different file types in my text editor. That way, at a glance, I can guess what kind of file a text-filled window contains, especially when zoomed out using Mission Control. I&amp;rsquo;ve been using Custom Language Preferences in BBEdit preferences to set up the color scheme for each file type there. TextMate 2 users, check out Multiple Themes in TextMate 2.</description></item><item><title>Managing the Productivity Context</title><link>https://hiltmon.com/blog/2012/11/06/managing-the-productivity-context/</link><pubDate>Tue, 06 Nov 2012 15:32:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/11/06/managing-the-productivity-context/</guid><description>&lt;p>Productivity is doing less stuff to get more stuff done. Managing its context is the key to becoming more productive. Here is a framework to establish and manage your productivity context to maximize your productivity when using your computer, based on what I have been doing to manage my own on my Mac. Hang in there, this is a long one.&lt;/p></description></item><item><title>Reducing Inboxes</title><link>https://hiltmon.com/blog/2012/11/06/reducing-inboxes/</link><pubDate>Tue, 06 Nov 2012 11:54:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/11/06/reducing-inboxes/</guid><description>We&amp;rsquo;ve all heard about Inbox Zero, where you try to reclaim your email, your attention and your life by clearing out your email inbox. I needed to reduce the number of inboxes first.
Those of us who have been on the Internet for decades have amassed a large number of email addresses on a variety of services. As time passed, and new services emerged, we added more. Most of us are loathe to close any of these addresses down just in case we get an email there.</description></item><item><title>Too Many Menu Bar Apps?</title><link>https://hiltmon.com/blog/2012/10/16/too-many-menu-bar-apps/</link><pubDate>Tue, 16 Oct 2012 17:27:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/10/16/too-many-menu-bar-apps/</guid><description>These days, in order to maximize my productivity, I seem to be running a lot of menu bar apps on my Macintosh OS X system. So many that I had to buy a menu bar manager, Bartender! Add what you use in the comments.
Here’s what each one is and why I use it (in no particular order):
1Password - One of my must have tools, enables me to reach and log into sites securely using strong site-specific passwords.</description></item><item><title>BBEdit still Rules</title><link>https://hiltmon.com/blog/2012/10/10/bbedit-still-rules/</link><pubDate>Wed, 10 Oct 2012 09:48:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/10/10/bbedit-still-rules/</guid><description>Lovely article on how the stalwart classic BBEdit still rules by Andy Ihnatko (@ihnatko) on Macworld today, entitled Mac classics: Why BBEdit rules
“BBEdit’s still important because at its essential core, it’s a tool for working with text,” says Rich Siegel, Bare Bones Software’s founder and CEO. “Not text for presentation, as in a word processor or page-layout application, but rather text as data supplied to other software: code for compilers and interpreters, markup and Web applications for Web browsers, log files and data tables for analysis, and for any tool that inhales raw text and turns it into something else.</description></item><item><title>Stop with the old Text Editors already</title><link>https://hiltmon.com/blog/2012/10/08/stop-with-the-old-text-editors-already/</link><pubDate>Mon, 08 Oct 2012 19:11:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/10/08/stop-with-the-old-text-editors-already/</guid><description>Over the past few years, it has become a thing to stop using IDE’s and modern text editors in favor of Vim. I understand older programmers using Vim out of habit, but the new generation of programmers? I don’t get it. Every-time I write about text editors, this growing group tweets to give modern GUI editors up and switch to old trusty rusty crusty terminal-based Vim.
Stop it! I’m not going to do that.</description></item><item><title>Bye bye Skitch, Hello LittleSnapper</title><link>https://hiltmon.com/blog/2012/09/27/bye-bye-skitch/</link><pubDate>Thu, 27 Sep 2012 15:29:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/09/27/bye-bye-skitch/</guid><description>Editor&amp;rsquo;s Note: Written six months ago, I&amp;rsquo;ve since moved on to using Glui - a better Skitch to replace Skitch.
Bye bye Skitch I’ve been using Skitch to grab screenshots since the first beta was announced way back in June, 2007. I paid for Skitch Plus in February 2011 because I loved the product, and the work by Plasq, so much. Then Evernote purchased Skitch and I hoped that they would not mess it up.</description></item><item><title>Text Editor Addict</title><link>https://hiltmon.com/blog/2012/08/25/text-editor-addict/</link><pubDate>Sat, 25 Aug 2012 13:10:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/08/25/text-editor-addict/</guid><description>Hi, my name is Hilton and maybe, just maybe, I am a text editor addict.
&amp;ldquo;Hello Hilton&amp;rdquo; you all say.
I seem to have a lot of text manipulation tools on my devices. Of course, I don’t think I have too many, but most people only seem to have one. You see, to me, each one has it’s own use, it’s the best tool for it’s job, that’s why I have and use it.</description></item><item><title>My Sublime Text 2 Setup</title><link>https://hiltmon.com/blog/2012/08/14/my-sublime-text-2-setup/</link><pubDate>Tue, 14 Aug 2012 12:38:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/08/14/my-sublime-text-2-setup/</guid><description>I have been using Sublime Text 2 for a month or so now, and I still do not love it. Here’s hoping TextMate 2 gets it’s game on. But at least I have it working closer to the way I want it to work and look now. Here are the minor changes I have made to make it work for me and how it compares to TextMate 2 (Updated: See My TextMate 2 Setup - The Hiltmon).</description></item><item><title>Change is Good - New Applications replacing Old Ones</title><link>https://hiltmon.com/blog/2012/08/03/change-is-good-new-applications-replacing-old-ones/</link><pubDate>Fri, 03 Aug 2012 15:38:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/08/03/change-is-good-new-applications-replacing-old-ones/</guid><description>There is some amazing independent software out there for the Mac. And I use a lot of it. I realized today, while fixing a problem on my wife’s laptop, that I have pretty much replaced many older products with new ones on my computer over the last year or so, yet she still uses all the old stuff.
Change is good for me. I love using new products that improve my productivity, work better or look better.</description></item><item><title>Moom Corners</title><link>https://hiltmon.com/blog/2012/08/03/moom-corners/</link><pubDate>Fri, 03 Aug 2012 13:07:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/08/03/moom-corners/</guid><description>Another quick trick, this time for Moom. When doing Ruby on Rails programming, I like my terminal at the bottom-right of the screen, my text editor at the bottom-left, the browser top-right and BBEdit (for taking notes) at the top-left. When blogging, I like the terminal in the same place, but I want Byword at the top-left. I got tired of dragging windows everywhere, so I set up keyboard shortcuts usimg Moom to place windows in the corners.</description></item><item><title>Setting up BBEdit for Markdown</title><link>https://hiltmon.com/blog/2012/08/03/setting-up-bbedit-for-markdown/</link><pubDate>Fri, 03 Aug 2012 11:50:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/08/03/setting-up-bbedit-for-markdown/</guid><description>Two advanced settings are needed to make BBEdit treat all new documents as Markdown format, and to save with the correct file extension. They are:
defaults write com.barebones.bbedit PreferredFilenameExtension_Markdown -string &amp;#34;markdown&amp;#34; defaults write com.barebones.bbedit DefaultLanguageNameForNewDocuments Markdown If you use TextWrangler, replace the “bbedit” in the above with “textwrangler”. But I’d recommend purchasing BBEdit instead.</description></item><item><title>Octopress Post and Publish</title><link>https://hiltmon.com/blog/2012/07/18/octopress-post-and-publish/</link><pubDate>Wed, 18 Jul 2012 18:01:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/07/18/octopress-post-and-publish/</guid><description>Since this site is getting larger and it&amp;rsquo;s running on Octopress, the rake generate and rake preview processes are getting slower. Enter rake isolate[&amp;quot;x&amp;quot;] to isolate the site down to the selected post. But isolating requires me to note the file name down, there is too much to remember and type and I am lazy.
So have created two macros and a script to speed this process up.
Note: You must run these commands in the root of the Octopress folder, else they will not work at all!</description></item><item><title>Kinds of Files in a Project Folder</title><link>https://hiltmon.com/blog/2012/07/16/kinds-of-files-in-a-project-folder/</link><pubDate>Mon, 16 Jul 2012 12:47:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/07/16/kinds-of-files-in-a-project-folder/</guid><description>In preparation for a client call, I wrote a quick and dirty script to count the kinds of files in a project folder to show them what&amp;rsquo;s involved. I wanted a nice presentation, and the files grouped into categories. I also added parameters to exclude certain folder patterns from the counter.
The command is
$ ~/Scripts/cfile.rb ~/Projects/Kifu/code/kifu log tmp doc versions The output is
Project File Counter v0.1 ©hiltmon.com 2012 https://hiltmon.</description></item><item><title>TextExpander in Terminal</title><link>https://hiltmon.com/blog/2012/07/15/textexpander-in-terminal/</link><pubDate>Sun, 15 Jul 2012 10:21:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/07/15/textexpander-in-terminal/</guid><description>I spend a lot of time in Terminal.app mostly running Rails or Git commands. I am also lazy, so I like to use short macros instead of typing in the same thing over and over again. I used to use bash aliases or functions, but I mostly use TextExpander snippets now because I like to be sure they don&amp;rsquo;t conflict with internal UNIX commands.
In this post I will show you</description></item><item><title>Project Folder Layout</title><link>https://hiltmon.com/blog/2012/06/30/project-folder-layout/</link><pubDate>Sat, 30 Jun 2012 12:32:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/06/30/project-folder-layout/</guid><description>We all work on multiple projects. And we&amp;rsquo;re creating new ones all the time, whether for new engagements, new personal projects or spikes. I personally like to have all my project files properly organized, every component of the project has its place, so I have been using my own standard project folder layout for years.
Until now. The old one was no longer working.
So I rearranged my standard project folder layout.</description></item><item><title>Syncing the Desktop and the Laptop</title><link>https://hiltmon.com/blog/2012/06/29/syncing-the-desktop-and-the-laptop/</link><pubDate>Fri, 29 Jun 2012 16:05:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/06/29/syncing-the-desktop-and-the-laptop/</guid><description>For the past few years, I have been working about 5½ days a week on the desktop and 1½ days a week on the laptop. The desktop is a monster 8-core Mac Pro with loads of RAM and my good old 23&amp;quot; Cinema HD Display, which makes it perfect for compiling, graphics work and the usual day-to-day work stuff. The laptop is a mid-2009 MacBook Pro 15&amp;quot;, perfect for on-site work and demos.</description></item><item><title>Learn to Automate</title><link>https://hiltmon.com/blog/2012/06/20/learn-to-automate/</link><pubDate>Wed, 20 Jun 2012 08:57:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/06/20/learn-to-automate/</guid><description>It&amp;rsquo;s been almost six months since the Codecademy launched learn to code in 2012, headlined by Mayor Bloomberg. Lots of people pledged, lots signed up.
And I&amp;rsquo;ll be flabbergasted if any of them are still doing it.
I&amp;rsquo;m not going to go into why having everybody learn to code is a bad thing in detail, Jeff Attwood nails that in Please Don&amp;rsquo;t Learn to Code. Short version, it puts the method before the problem, programmers like to solve problems and create solutions, and the tool they mostly use is code.</description></item><item><title>Markdown Metadata</title><link>https://hiltmon.com/blog/2012/06/18/markdown-metadata/</link><pubDate>Mon, 18 Jun 2012 13:31:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/06/18/markdown-metadata/</guid><description>As you all know, I write everything in Markdown, see my The Markdown Mindset. It would be nice, though, to also save metadata - information about the document - in the document, to make it searchable, but not to have it appear in the final output.
Turns out, MultiMarkdown (and other new Markdown processors) do support this. It&amp;rsquo;s easy.
Simply add the metadata to the top of a markdown file as follows:</description></item><item><title>Sandboxing and Productivity Utilities</title><link>https://hiltmon.com/blog/2012/06/11/sandboxing-and-productivity-utilities/</link><pubDate>Mon, 11 Jun 2012 09:02:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/06/11/sandboxing-and-productivity-utilities/</guid><description>Apple&amp;rsquo;s recent requirement for all App Store applications to be sandboxed has led to a problem for us pro users, many of our magical productivity utilities will no longer work. And if you think that&amp;rsquo;s a problem for us, imagine how the developers feel.
Er, Sandboxing? Sandboxing is a computer security term for separating running programs so that they can only access a limited set of files and resources on your computer and not interfere with other programs and files.</description></item><item><title>The Demo Bag</title><link>https://hiltmon.com/blog/2012/06/05/the-demo-bag/</link><pubDate>Tue, 05 Jun 2012 12:31:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/06/05/the-demo-bag/</guid><description>I&amp;rsquo;m demonstrating software this afternoon, so out comes the demo bag. It&amp;rsquo;s a Cocoon 15&amp;quot; GRID-IT™ Case (not an affiliate link) that I picked up at the local Apple store.
The things that sold it to me are:
It&amp;rsquo;s black and conservative looking so no-one knows how cool it is It&amp;rsquo;s a hard-ish case, so my goods are protected It&amp;rsquo;s the right size for a 15&amp;quot; Macbook Pro, an iPad and related cables, and no bulkier But the biggest selling point of all, it has the GRID-IT™ system, no more digging around a bag to find the cables and accessories needed in a demo.</description></item><item><title>Using Mission Control Desktops</title><link>https://hiltmon.com/blog/2012/06/03/using-mission-control-desktops/</link><pubDate>Sun, 03 Jun 2012 10:01:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/06/03/using-mission-control-desktops/</guid><description>In order to reduce distractions while I am working, yet still have the benefit of having these applications running, I use multiple Mission Control desktops on my Macintosh computers. In short, I work, with focus, on Desktop 1; respond to email on Desktop 2; IM and Tweet from Desktop 3; and manage my time and activity on Desktop 4.
Here&amp;rsquo;s why and how it works.
Each desktop has a purpose Desktop 1 is my work desktop.</description></item><item><title>Project Specific Data</title><link>https://hiltmon.com/blog/2012/05/27/project-specific-data/</link><pubDate>Sun, 27 May 2012 12:39:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/05/27/project-specific-data/</guid><description>One of my personal workflow bugbears has always been managing project specific data. Data like project specific contacts (who to call for what for a given project); IP&amp;rsquo;s, logins and passwords (for servers, VPN&amp;rsquo;s, specific applications, client LAN&amp;rsquo;s); and account information (hosting, third party vendors and project specific subscriptions).
I have finally nailed a way to do this that works just great for me and my markdown flow (See The Markdown Mindset).</description></item><item><title>Distributed Note Taking</title><link>https://hiltmon.com/blog/2012/05/22/distributed-note-taking/</link><pubDate>Tue, 22 May 2012 09:39:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/05/22/distributed-note-taking/</guid><description>I have switched over to and finally locked in on a new distributed note taking process, using Elements on the iPad, Dropbox synching, TextExpander file naming and nvAlt on the Mac. Here&amp;rsquo;s how I got to this point, and how it works.
Going electronic, the old way Since I switched over to the iPad from a paper notepad about two years ago, I used Penultimate and a stylus to scribble notes.</description></item><item><title>Automatically Managed Files</title><link>https://hiltmon.com/blog/2012/05/16/automatically-managed-files/</link><pubDate>Wed, 16 May 2012 16:02:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/05/16/automatically-managed-files/</guid><description>I&amp;rsquo;m moving back to the desktop for a while to do some iOS programming. Many of the files on my laptop are auto-managing, so as I am moving the process, I thought I&amp;rsquo;d share how they are automatically managed using Hazel from NoodleSoft.
Hazel is a background process that monitors folders and executes automated actions on matched files. Once a rule is created in Hazel, I can forget about what I have to do and Hazel takes care of things for me.</description></item><item><title>Application Context Packs</title><link>https://hiltmon.com/blog/2012/04/26/application-context-packs/</link><pubDate>Thu, 26 Apr 2012 09:49:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/04/26/application-context-packs/</guid><description>When developing in Rails, I use a certain pack of applications; when coding for iOS, I use a different pack of applications; and when in a blogging context, I use a third pack of applications. And then there is the regular set of applications that I usually leave running. Starting and switching between these contexts used to take time, until I found a better way.
The Old Way
After a clean reboot, I would then have to go through the same dance every time, launch the regular applications manually.</description></item><item><title>Text Notes - Going Electronic</title><link>https://hiltmon.com/blog/2012/04/15/text-notes-going-electronic/</link><pubDate>Sun, 15 Apr 2012 13:45:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/04/15/text-notes-going-electronic/</guid><description>&lt;p>One of the big changes I made in the last year is how I take and store text notes. By text notes, I mean meeting notes, book lists, blog ideas, thoughts, even project estimates. I&amp;rsquo;ve finally gone paperless.&lt;/p>
&lt;p>tl;dr (too long; didn&amp;rsquo;t read): I write notes in &lt;a href="https://hiltmon.com/blog/2012/02/20/the-markdown-mindset/">Markdown&lt;/a>, in files named using &lt;a href="http://smilesoftware.com/TextExpander/">TextExpander&lt;/a> macros, using &lt;a href="http://brettterpstra.com/project/nvalt/">nvALT&lt;/a> with &lt;a href="https://www.dropbox.com/">Dropbox&lt;/a> sync on the Mac and &lt;a href="http://www.secondgearsoftware.com/elements/">Elements&lt;/a> or &lt;a href="http://bywordapp.com/">Byword&lt;/a> on iOS sharing the same Dropbox folder. I still keep project development logs in separate Markdown files within each product&amp;rsquo;s folder because I format and deliver them. I don&amp;rsquo;t use &lt;a href="http://www.evernote.com/">Evernote&lt;/a> because I cannot stand it.&lt;/p></description></item><item><title>My Blog Writing Workflow</title><link>https://hiltmon.com/blog/2012/03/15/my-blog-writing-workflow/</link><pubDate>Thu, 15 Mar 2012 14:52:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/03/15/my-blog-writing-workflow/</guid><description>With the release of Byword for iOS (iTunes app store link), my blog writing workflow has come full circle.
All posts start as ideas and notes jotted down in nvAlt, Brett Terpstra&amp;rsquo;s fork of Notational Velocity. I like this product because the search and use of notes is fully integrated, and it supports markdown. I have set it up so that all notes are stored as markdown files in a Dropbox folder and Byword has been set up as the external editor.</description></item><item><title>Get to read quicker</title><link>https://hiltmon.com/blog/2012/03/14/get-to-read-quicker/</link><pubDate>Wed, 14 Mar 2012 19:43:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/03/14/get-to-read-quicker/</guid><description>People come to hiltmon.com to read, and occasionally to comment on the writing found here. Statistics show that no-one uses the social icons to tweet, Facebook or Google+ the articles.
The average page loads in 2.53 seconds and makes 84 requests. Thats a long time for readers to wait, and a lot of requests. So I decided to check out what is going on.
The basic page requires 29 requests and takes ~800ms to load (when the cache is clear).</description></item><item><title>Text Editing Fonts and Colors</title><link>https://hiltmon.com/blog/2012/02/23/text-editing-fonts-and-colors/</link><pubDate>Thu, 23 Feb 2012 20:33:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/02/23/text-editing-fonts-and-colors/</guid><description>In The Markdown Mindset I described how I use a variety of different editors to write Markdown in different contexts. I also use different fonts and color schemes to help me differentiate as I go along.
For the record, everything was done in Monaco a few years ago.
Cousine Blogging is done in Byword using Cousine 15pt and the light theme. It&amp;rsquo;s pretty close to Nitti Light as used in iAWriter, but has variable sizing and is free from Google.</description></item><item><title>Less Wasting Time</title><link>https://hiltmon.com/blog/2012/01/26/less-wasting-time/</link><pubDate>Thu, 26 Jan 2012 10:18:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/01/26/less-wasting-time/</guid><description>The sub-theme this week is on trying to find ways to improve developer happiness and to reduce unpleasant time wasters.
Rafe Colburn in Don’t order your team to work more hours talks about bosses who ask staff to work more hours:
Every time you’re tempted to do so, sit down with members of the team and ask them how many hours a week they spend dealing with stuff not related to shipping and work to make those things go away instead.</description></item><item><title>Bread crumbs in Day One</title><link>https://hiltmon.com/blog/2012/01/23/bread-crumbs-in-day-one/</link><pubDate>Mon, 23 Jan 2012 13:09:00 -0400</pubDate><guid>https://hiltmon.com/blog/2012/01/23/bread-crumbs-in-day-one/</guid><description>I switched over to Day One for journaling at the start of the year on a lark, and its become a core part of my process.
Here are three things I do with it:
1. Bread crumb blog posts I have updated the Octopress rake file for new_post to also bread crumb the new post in Day One (and launch Byword for editing).
Place this at the end of the :new_post task (see below for details on the LogToDayOne.</description></item></channel></rss>