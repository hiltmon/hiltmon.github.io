<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Markdown on Hiltmon</title><link>https://hiltmon.github.io/tags/markdown/</link><description>Recent content in Markdown on Hiltmon</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 17 Nov 2015 12:26:13 -0500</lastBuildDate><atom:link href="https://hiltmon.github.io/tags/markdown/index.xml" rel="self" type="application/rss+xml"/><item><title>A Yosemite Markdown Spotlight importer</title><link>https://hiltmon.github.io/blog/2015/11/17/a-yosemite-markdown-spotlight-importer/</link><pubDate>Tue, 17 Nov 2015 12:26:13 -0500</pubDate><guid>https://hiltmon.github.io/blog/2015/11/17/a-yosemite-markdown-spotlight-importer/</guid><description>All my text and writing is in Markdown formatted files and I would like to search them using Spotlight. The editors I use do not have an importer (they have Quicklook only), so this is not available directly.
Changing the RichText Spotlight importer trick worked in previous versions of OS X (see how in A Simple Markdown Spotlight Importer), but since System Integrity Protection in OS X El Capitan, this no longer works.</description></item><item><title>A simple Markdown Spotlight importer</title><link>https://hiltmon.github.io/blog/2015/06/27/a-simple-markdown-spotlight-importer/</link><pubDate>Sat, 27 Jun 2015 14:33:43 -0400</pubDate><guid>https://hiltmon.github.io/blog/2015/06/27/a-simple-markdown-spotlight-importer/</guid><description>Note: This is for Yosemite or before, for El Capitan or later, see A Yosemite Markdown Spotlight Importer.
I noticed recently that Spotlight on Yosemite was no longer indexing my Markdown files. Since all my notes are in Markdown format, and Spotlight is how I find my notes, this was a big problem. Reinstalling my current set of Markdown editors did not help.
This did. Huge thanks to Gereon Sommer for the idea in Mac OS X Spotlight Enhancement.</description></item><item><title>Standard Markdown</title><link>https://hiltmon.github.io/blog/2014/09/03/standard-markdown/</link><pubDate>Wed, 03 Sep 2014 20:25:56 -0400</pubDate><guid>https://hiltmon.github.io/blog/2014/09/03/standard-markdown/</guid><description>Looks like Jeff Atwood (@CodingHorror), John MacFarlane, David Greenspan of Meteor, and folks from StackExchange, Github and Reddit have put their money where their mouths are and released the first version of Standard Markdown at http://standardmarkdown.com.
I believe this will be the future of John Gruber&amp;rsquo;s (@daringfireball) Markdown.
Up until now, I have relied on Fletcher Penney&amp;rsquo;s (@multimarkdown) MultiMarkdown on the desktop for all my documents because of its consistency, ubiquity and wonderful extensions for writers (including tables and footnotes).</description></item><item><title>Melding Scrivener and Marked</title><link>https://hiltmon.github.io/blog/2014/05/05/melding-scrivener-and-marked/</link><pubDate>Mon, 05 May 2014 20:07:17 -0400</pubDate><guid>https://hiltmon.github.io/blog/2014/05/05/melding-scrivener-and-marked/</guid><description>If you are a regular reader of this blog, you will know that I do all my writing using Markdown format, short-form in Byword, long-form in Scrivener and generate the final document using Marked.
In short: I write all my work documents, including letters, reports and software documentation in Markdown formatted text files and then format them using Marked and a standard stylesheet (See Letterhead - Markdown Style for how that works).</description></item><item><title>The Markdown Payoff</title><link>https://hiltmon.github.io/blog/2014/04/27/the-markdown-payoff/</link><pubDate>Sun, 27 Apr 2014 12:33:04 -0400</pubDate><guid>https://hiltmon.github.io/blog/2014/04/27/the-markdown-payoff/</guid><description>A long, long time ago in a galaxy far, far away, I switched to Markdown format for documents, notes and other scratchings. (And wrote about it - see the posts in the Markdown category).
Was switching to Markdown a good call? Did it pay off? And if so, how?
I actually wrote this post not knowing how it would turn out. I wanted to know for myself if it paid off, or if I just followed a fad.</description></item><item><title>Letterhead - Markdown Style</title><link>https://hiltmon.github.io/blog/2013/05/23/letterhead-markdown-style/</link><pubDate>Thu, 23 May 2013 08:47:00 -0400</pubDate><guid>https://hiltmon.github.io/blog/2013/05/23/letterhead-markdown-style/</guid><description>So I get this request yesterday to send a document on letterhead. You all may remember letterheads from back in the day when companies had professional printers print their fancy logos on fancy paper that you then ran through the &amp;ldquo;good&amp;rdquo; laser printer that then went into matching fancy envelopes and someone stuck stamps on and mailed them.
I thought that letterheads went the way of the dodo about the same time fax machines and US Mail both died out.</description></item><item><title>CriticMarkup Bundle for TextMate 2</title><link>https://hiltmon.github.io/blog/2013/02/15/criticmarkup-bundle-for-textmate-2/</link><pubDate>Fri, 15 Feb 2013 12:38:00 -0400</pubDate><guid>https://hiltmon.github.io/blog/2013/02/15/criticmarkup-bundle-for-textmate-2/</guid><description>Update: Christian Tietze (@DivineDominion) has created a bundle that&amp;rsquo;s included in the official toolkit, so I contributed my bundle&amp;rsquo;s commands to that, and will be using and contributing to that one from now on. Get the full toolkit at CriticMarkup-toolkit or just the TextMate bundle at criticmarkup.tmbundle. I&amp;rsquo;ve already taken my repo down to prevent confusion.
Recently, @macdrifter and @themindfulbit announced CriticMarkup, a way for authors and editors to track changes to documents in plain text.</description></item><item><title>Back to Byword from iA Writer</title><link>https://hiltmon.github.io/blog/2012/11/29/back-to-byword-from-ia-writer/</link><pubDate>Thu, 29 Nov 2012 17:26:00 -0400</pubDate><guid>https://hiltmon.github.io/blog/2012/11/29/back-to-byword-from-ia-writer/</guid><description>For as long as it has been available, I have been using Byword for writing in Markdown. All blog posts, all knowledge base notes, all written using Byword. But I really liked the look of iA Writer, so I made Byword’s font look more like iA Writer’s (see Text Editing Fonts and Colors). Perfect.
I even started a “why I prefer one over the other” post, but it only contained one item:</description></item><item><title>Markdown Metadata</title><link>https://hiltmon.github.io/blog/2012/06/18/markdown-metadata/</link><pubDate>Mon, 18 Jun 2012 13:31:00 -0400</pubDate><guid>https://hiltmon.github.io/blog/2012/06/18/markdown-metadata/</guid><description>As you all know, I write everything in Markdown, see my The Markdown Mindset. It would be nice, though, to also save metadata - information about the document - in the document, to make it searchable, but not to have it appear in the final output.
Turns out, MultiMarkdown (and other new Markdown processors) do support this. It&amp;rsquo;s easy.
Simply add the metadata to the top of a markdown file as follows:</description></item><item><title>Marked 1.4</title><link>https://hiltmon.github.io/blog/2012/04/09/marked-1-dot-4/</link><pubDate>Mon, 09 Apr 2012 12:13:00 -0400</pubDate><guid>https://hiltmon.github.io/blog/2012/04/09/marked-1-dot-4/</guid><description>If you are a fans of the The Markdown Mindset, then the must-have Markdown preview app Marked has just been updated to V1.4 by Brett Terpstra.
Marked has gone from a simple preview app that always sits to the right of my writing window to an integral part of my writing, checking, publishing and delivery process. As you know, I already do all my writing in Markdown. I use Marked to preview the results using the formatting I intend to deliver it (Kifu format, blog format, report format), and then use it&amp;rsquo;s great export features to generate the HTML or PDFs I send out.</description></item><item><title>Markdown Quick Look</title><link>https://hiltmon.github.io/blog/2012/03/22/markdown-quick-look/</link><pubDate>Thu, 22 Mar 2012 15:24:00 -0400</pubDate><guid>https://hiltmon.github.io/blog/2012/03/22/markdown-quick-look/</guid><description>If you use markdown like I do on a Mac, you may notice that Quick Look does not render .markdown files as documents, instead providing an icon only. If you have tools like iAWriter installed (I used to), they install a Quick Look plugin, and the markdown is rendered readable.
For the rest of us, Brett Terpstra of Marked and nvAlt fame has released an update to Fletcher Penney&amp;rsquo;s Quick Look generator.</description></item><item><title>My Blog Writing Workflow</title><link>https://hiltmon.github.io/blog/2012/03/15/my-blog-writing-workflow/</link><pubDate>Thu, 15 Mar 2012 14:52:00 -0400</pubDate><guid>https://hiltmon.github.io/blog/2012/03/15/my-blog-writing-workflow/</guid><description>With the release of Byword for iOS (iTunes app store link), my blog writing workflow has come full circle.
All posts start as ideas and notes jotted down in nvAlt, Brett Terpstra&amp;rsquo;s fork of Notational Velocity. I like this product because the search and use of notes is fully integrated, and it supports markdown. I have set it up so that all notes are stored as markdown files in a Dropbox folder and Byword has been set up as the external editor.</description></item><item><title>Writing on the iPad</title><link>https://hiltmon.github.io/blog/2012/03/09/writing-on-the-ipad/</link><pubDate>Fri, 09 Mar 2012 11:12:00 -0400</pubDate><guid>https://hiltmon.github.io/blog/2012/03/09/writing-on-the-ipad/</guid><description>This comment by JohnDoey (reproduced in full without permission) on the Asymco article The new feeds and speeds: iPad vs. MacBook Air and iMac sums up the iPad writing experience beautifully (although I think the iPad is a good production system too):
I&amp;rsquo;m a writer also. You missed a key point about writing on iPad.
Writers who are using iPads are not using them like Macs (or Mac clones,) they are using them like typewriters.</description></item><item><title>The Markdown File Extension</title><link>https://hiltmon.github.io/blog/2012/03/07/the-markdown-file-extension/</link><pubDate>Wed, 07 Mar 2012 11:39:00 -0400</pubDate><guid>https://hiltmon.github.io/blog/2012/03/07/the-markdown-file-extension/</guid><description>The correct file extension for markdown files is:
.markdown
That is all. No others.
Make it so!
Update: It seems the GitHub .md extension is becoming canonical for those who prefer shorter file names. And Dr Drang @drdrang uses it. Who am I to argue. But I&amp;rsquo;ll be sticking with .markdown.
I suppose I&amp;rsquo;d better say why:
We no longer live in a 8.3 world, so we should be using the most descriptive file extensions.</description></item><item><title>The Markdown Mindset</title><link>https://hiltmon.github.io/blog/2012/02/20/the-markdown-mindset/</link><pubDate>Mon, 20 Feb 2012 20:07:00 -0400</pubDate><guid>https://hiltmon.github.io/blog/2012/02/20/the-markdown-mindset/</guid><description>&lt;p>Over the last year, I have moved all my non-code writing to &lt;a href="http://daringfireball.net/projects/markdown/">Markdown&lt;/a> format. I don&amp;rsquo;t even have Microsoft Word installed on my laptop anymore. Here&amp;rsquo;s why:&lt;/p></description></item></channel></rss>