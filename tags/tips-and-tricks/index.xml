<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tips and Tricks on Hiltmon</title><link>https://hiltmon.github.io/tags/tips-and-tricks/</link><description>Recent content in Tips and Tricks on Hiltmon</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 29 Sep 2013 12:12:00 -0400</lastBuildDate><atom:link href="https://hiltmon.github.io/tags/tips-and-tricks/index.xml" rel="self" type="application/rss+xml"/><item><title>Homebrew Happiness</title><link>https://hiltmon.github.io/blog/2013/09/29/homebrew-happiness/</link><pubDate>Sun, 29 Sep 2013 12:12:00 -0400</pubDate><guid>https://hiltmon.github.io/blog/2013/09/29/homebrew-happiness/</guid><description>If you are expecting an article about beer, this is not it. This is about the best product that helps install and manage the Open Source software on the Macintosh computer that Apple decided not to include in OS X.
In short, I use a lot of Open Source products for work, like postgresql, redis, mongo, node, boost libraries and rbenv. Installing and managing them natively on a Mac was a pain.</description></item><item><title>Quick Process Search</title><link>https://hiltmon.github.io/blog/2013/07/30/quick-process-search/</link><pubDate>Tue, 30 Jul 2013 19:45:00 -0400</pubDate><guid>https://hiltmon.github.io/blog/2013/07/30/quick-process-search/</guid><description>I am forever starting and running background UNIX tasks, either manually or via cron jobs. And I am forever checking to see if they are running or not.
The usual command I used to use see if a process was running is
ps ax | grep bash Where bash is the process that may or may not be running. It gives (headers added):
PID TTY TIME CMD 411 ttys000 0:00.</description></item><item><title>Sharing Reminder Lists</title><link>https://hiltmon.github.io/blog/2013/06/01/sharing-reminder-lists/</link><pubDate>Sat, 01 Jun 2013 08:51:00 -0400</pubDate><guid>https://hiltmon.github.io/blog/2013/06/01/sharing-reminder-lists/</guid><description>Looking for a quick and easy way to share reminders with other people? Here&amp;rsquo;s how we do it.
My wife and I share a Reminders.app list called Groceries that we check on the way home. If there is anything on the list, we pop into the shop and pick it up.
Reminders.app is an Apple app included in iOS and the Mac that enables you to create lists, set reminder dates or reminder locations.</description></item><item><title>Instantly grab a high-res icon for any Mac app</title><link>https://hiltmon.github.io/blog/2013/05/01/instantly-grab-a-high-res-icon-for-any-mac-app/</link><pubDate>Wed, 01 May 2013 11:28:00 -0400</pubDate><guid>https://hiltmon.github.io/blog/2013/05/01/instantly-grab-a-high-res-icon-for-any-mac-app/</guid><description>In Instantly grab a high-res icon for any iOS app, the awesome Brett Terpstra (@ttscoff) offered a script and an app to get the icon from iTunes for any iOS app.
I wanted the same for Mac apps. Turns out, it&amp;rsquo;s a one word change to Brett&amp;rsquo;s scripts. Just follow his instructions using the below files, but replace the script name with macicon.rb and the application name with MacIcon.
Download and save the script as macicon.</description></item><item><title>Slogger after 6 Months</title><link>https://hiltmon.github.io/blog/2013/04/23/slogger-after-6-months/</link><pubDate>Tue, 23 Apr 2013 10:43:00 -0400</pubDate><guid>https://hiltmon.github.io/blog/2013/04/23/slogger-after-6-months/</guid><description>&lt;p>I have been using &lt;a href="http://brettterpstra.com">Brett Terpstra&amp;rsquo;s&lt;/a> (&lt;a href="http://twitter.com/ttscoff">@ttscoff&lt;/a>) &lt;a href="http://brettterpstra.com/projects/slogger/">Slogger&lt;/a> for the last six months, and I think it&amp;rsquo;s time to review it. Slogger is a script and a set of plugins that log your online activity each day into &lt;a href="https://itunes.apple.com/us/app/day-one/id422304217?mt=12&amp;amp;uo=4&amp;amp;at=10l894">Day One&lt;/a>, the best journaling application for OS X, or in Markdown files if you prefer. It&amp;rsquo;s a core part of my &lt;a href="https://hiltmon.com/blog/2013/03/14/backup-your-online-life/">Backing up your Online Life&lt;/a> process.&lt;/p>
&lt;p>&lt;em>TL;DR: It&amp;rsquo;s totally worth taking the time to set it up and get it going. The data captured is so useful and often hard to gain access to, especially as we operate across many services, and as these services come and go.&lt;/em>&lt;/p></description></item><item><title>Sharing nvAlt Notes with Ulysses III</title><link>https://hiltmon.github.io/blog/2013/04/05/sharing-nvalt-notes-with-ulysses-iii/</link><pubDate>Fri, 05 Apr 2013 10:49:00 -0400</pubDate><guid>https://hiltmon.github.io/blog/2013/04/05/sharing-nvalt-notes-with-ulysses-iii/</guid><description>I&amp;rsquo;m testing out Ulysses III for writing and so far I am finding it postively interesting for a 1.0 rewrite. One thing I wanted to try was to use it for notes alongside nvAlt.
Here&amp;rsquo;s how to share notes between Ulysses III and nvAlt.
In Ulysses III, click the plus icon on the bottom left (1) and choose Add External Source... (2). Choose the folder in Dropbox where you store your nvAlt plain text notes, then click Open.</description></item><item><title>Bjango's Photoshop Actions</title><link>https://hiltmon.github.io/blog/2013/03/25/bjango-photoshop-actions/</link><pubDate>Mon, 25 Mar 2013 16:59:00 -0400</pubDate><guid>https://hiltmon.github.io/blog/2013/03/25/bjango-photoshop-actions/</guid><description>I&amp;rsquo;ve already pointed out that you must have Slicy when working in Photoshop to create and manage iOS artwork or when creating assets for web sites.
The other must have not-so-secret weapon for iOS art is Bjango&amp;rsquo;s iOS and Android Photoshop Actions &amp;amp; Workflows. These are a set of Photoshop actions that speed up the creation and scaling of iOS artwork.
I start all iOS screen designs using the blue actions that create the necessary blank screen files (they even create a nice status bar).</description></item><item><title>Mixing Legacy and Modern Web Development on OS X Mountain Lion</title><link>https://hiltmon.github.io/blog/2013/03/20/mixing-legacy-and-modern-web-development-on-os-x-mountain-lion/</link><pubDate>Wed, 20 Mar 2013 16:42:00 -0400</pubDate><guid>https://hiltmon.github.io/blog/2013/03/20/mixing-legacy-and-modern-web-development-on-os-x-mountain-lion/</guid><description>&lt;p>Over the past few years I have been developing &lt;em>modern&lt;/em> web applications like &lt;a href="http://www.kifuapp.com">Kifu&lt;/a> on my laptop using &lt;a href="https://rubyonrails.org/">Ruby on Rails&lt;/a>, &lt;a href="http://www.sinatrarb.com">Sinatra&lt;/a>, &lt;a href="http://octopress.org">Octopress&lt;/a>, and &lt;a href="http://nodejs.org">Node.js&lt;/a> powered by &lt;a href="http://pow.cx">Pow&lt;/a>. But over the next few weeks I&amp;rsquo;ll be helping a friend upgrade a bunch of older legacy static (plain HTML), &lt;a href="http://php.net">PHP&lt;/a> and &lt;a href="http://wordpress.org">Wordpress&lt;/a> sites.&lt;/p>
&lt;p>I &lt;em>do&lt;/em> want to keep using the same smooth workflow processes as I have now. But I do &lt;em>not&lt;/em> want to clutter up my pristine OS X installation to do it. So this is how I have my &lt;em>modern&lt;/em> web development environment set up, and how I have added &lt;em>almost seamless&lt;/em> legacy development capability to it.&lt;/p></description></item><item><title>Cutting down on Web Tracking</title><link>https://hiltmon.github.io/blog/2013/03/18/cutting-down-on-web-tracking/</link><pubDate>Mon, 18 Mar 2013 10:46:00 -0400</pubDate><guid>https://hiltmon.github.io/blog/2013/03/18/cutting-down-on-web-tracking/</guid><description>You may not know it, but lots of web sites use a variety of tricks to track you across the Internet, not just on the site you are currently browsing. These all depend on your browser talking to the tracker&amp;rsquo;s server without your knowledge or consent. These trackers use huge numbers of servers with different names and IP addresses to make it more difficult to stop them.
If you use a single browser all the time, plugins like Ghostery work very well.</description></item><item><title>Sharing Bash Profiles across Computers</title><link>https://hiltmon.github.io/blog/2013/03/12/sharing-bash-profiles-across-computers/</link><pubDate>Tue, 12 Mar 2013 13:48:00 -0400</pubDate><guid>https://hiltmon.github.io/blog/2013/03/12/sharing-bash-profiles-across-computers/</guid><description>If you use more than one computer, keeping your dotfiles in sync is difficult. You either need to run a sync program like ChronoSync or set up your own rsync scripts. And then remember to run them.
I&amp;rsquo;m lazy, I just want it to work. So here is a lightweight way to share your key dotfiles across computers using Dropbox.
Create a folder in Dropbox called Scripts and save your dotfiles there:</description></item><item><title>Better Bash Shell Expansion</title><link>https://hiltmon.github.io/blog/2013/03/12/better-bash-shell-expansion/</link><pubDate>Tue, 12 Mar 2013 12:33:00 -0400</pubDate><guid>https://hiltmon.github.io/blog/2013/03/12/better-bash-shell-expansion/</guid><description>I&amp;rsquo;ve been doing a lot of work on TextMate 2 plugins recently and the way shell expansion works in the terminal has been annoying me. Here are some tips to
speed up access to the Application Support folder, create case insensitive tab completions, reduce typing to cd to common folders and to reuse the TAB key for additional completions. Getting to Application Support The TextMate bundles I am working on are hidden in the Library â†’ Application Support Folder.</description></item></channel></rss>